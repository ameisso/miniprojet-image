#include "opencv2/imgproc/imgproc.hpp"
#include "opencv2/highgui/highgui.hpp"

#include <cstdio>
#include <iostream>

using namespace cv;
using namespace std;
//---------------------------------------------------------------------------------------------
void tresh(double seuil);//binarise l'image
void sub(Mat img1, Mat img2); //soustraire deux images
//---------------------------------------------------------------------------------------------
static void help()
{
    cout << "programme qui charge les images et fait les traitements dont on a besoin"<< endl;
}
Mat img, img2;
Mat imgTresh;//image seuillée



int main( int argc, char** argv )
{
    Mat img0 = imread("data/detection_0000.jpeg", 1);
    if( img0.empty() )
    {
        cout << "Couldn'g open image "<<endl;
        return 0;
    }
    img0.copyTo(img);
    imshow("originale",img0);
    Mat img1 = imread("data/detection_0200.jpeg", 1);
    if( img1.empty() )
    {
        cout << "Couldn'g open image 2"<<endl;
        return 0;
    }
    img0.copyTo(img2);
    imshow("originale (deuxième)",img1);
    help();





    for(;;)
    {
        int c = waitKey(0);

        if( (char)c == 27 )//touche echap
            break;


        if( (char)c == 't' || (char)c == ' ' )
        {
            tresh(50);
        }
        if( (char)c == 's' || (char)c == ' ' )
        {
            open cv core 
                    
        }
    }

    return 0;
}
void tresh (double seuil)
{
    cout<<"binarisation d l'image"<<endl;
    cvtColor(img, img, CV_BGR2GRAY);//on converti l'image en niveaux de gris  sinon on a une image en 16 couleurs...
    threshold(img,imgTresh,seuil,255,THRESH_BINARY);//le seuil max est fixé ici à 255, mais o peut le changer
    imshow("binarize",imgTresh);
}

